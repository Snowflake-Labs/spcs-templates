USE ROLE ACCOUNTADMIN;
set ML_INFERENCE_ROLE='<<YOUR_ROLE_NAME>>';

GRANT OPERATE ON WAREHOUSE <<YOUR_WAREHOUSE>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT USAGE ON WAREHOUSE <<YOUR_WAREHOUSE>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT USAGE ON DATABASE <<YOUR_DATABASE>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT USAGE ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE TABLE ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE SERVICE ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE FUNCTION ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT SELECT ON ALL TABLES IN DATABASE <<YOUR_DATABASE>> to ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE COMPUTE POOL ON ACCOUNT TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE IMAGE REPOSITORY ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> to ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE STAGE ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> to ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT CREATE FILE FORMAT ON SCHEMA <<YOUR_DATABASE>>.<<YOUR_SCHEMA>> to ROLE IDENTIFIER($ML_INFERENCE_ROLE);
GRANT BIND SERVICE ENDPOINT ON ACCOUNT TO ROLE IDENTIFIER($ML_INFERENCE_ROLE);

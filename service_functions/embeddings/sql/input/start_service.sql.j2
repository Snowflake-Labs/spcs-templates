
DROP SERVICE IF EXISTS {{SERVICE_NAME}};

CREATE SERVICE {{SERVICE_NAME}}
IN COMPUTE POOL {{COMPUTE_POOL_NAME}}
FROM SPECIFICATION '
spec:
  container:
  - name: main
    image: {{SERVICE_IMAGE}}
    command:
     - gunicorn
     - -k
     - uvicorn.workers.UvicornWorker
     - --bind
     - 0.0.0.0:9000
     - --workers
     - 1
     - --timeout
     - 0
     - async_app:app
    env:
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: YES
    resources:
      requests:
{% if NUM_GPUS != 0 %}
        nvidia.com/gpu: {{ NUM_GPUS }}
{% endif %}
        cpu: 1
      limits:
{% if NUM_GPUS != 0 %}
        nvidia.com/gpu: {{ NUM_GPUS }}
{% endif %}
        cpu: 1
  endpoint:
  - name: main
    port: 9000
'
WITH
MIN_INSTANCES = {{SERVICE_NUM_INSTANCES}}
MAX_INSTANCES = {{SERVICE_NUM_INSTANCES}}
EXTERNAL_ACCESS_INTEGRATIONS=({{EAI_NAME}});


CREATE OR REPLACE FUNCTION {{SERVICE_NAME}}_EMBEDDING_FN (n VARCHAR)
  returns VARCHAR
  service={{SERVICE_NAME}}
  endpoint='main'
  MAX_BATCH_ROWS={{MAX_BATCH_SIZE}}
  as '/extract_embeddings';


CREATE OR REPLACE FUNCTION {{SERVICE_NAME}}_CLASSIFY_FN (n VARCHAR)
  returns VARCHAR
  service={{SERVICE_NAME}}
  endpoint='main'
  MAX_BATCH_ROWS={{MAX_BATCH_SIZE}}
  as '/classify_texts';
